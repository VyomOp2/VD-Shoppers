// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  userId            String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  billboards        Billboard[]       @relation("StoreToBillboards")
  categories        Category[]        @relation("StoreToCategory")
  sizes             Size[]            @relation("StoreToSize")
  colors            Color[]            @relation("StoreToColor")
}

model Billboard {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  storeId           String            @db.ObjectId
  store             Store             @relation(fields: [storeId], references: [id], name: "StoreToBillboards")
  label             String
  imageURL          String
  categories        Category[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  @@index([storeId])
}

model Category {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  storeId           String            @db.ObjectId
  store             Store             @relation(fields: [storeId], references: [id] , name: "StoreToCategory")
  billboardId       String            @db.ObjectId
  billboard         Billboard         @relation(fields: [billboardId], references: [id])
  name              String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  value             String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  storeId           String            @db.ObjectId
  
  store             Store             @relation(fields: [storeId], references: [id] , name: "StoreToSize")

  @@index([storeId])
}

model Color {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  value             String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  storeId           String            @db.ObjectId
  
  store             Store             @relation(fields: [storeId], references: [id] , name: "StoreToColor")

  @@index([storeId])
}

